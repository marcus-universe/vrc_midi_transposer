name: Windows Release Build and Draft

on:
    workflow_dispatch:
        inputs:
            release_tag:
                description: "Optional tag to use (overrides Cargo.toml). Provide full tag (e.g. v0.1.0) or leave empty to use Cargo.toml version."
                required: false
                default: ""

permissions:
    contents: write
    packages: write
    id-token: write

jobs:
    build-win:
        name: Build on Windows and create draft release
        runs-on: windows-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  profile: minimal
                  override: true

            - name: Build release
              shell: pwsh
              run: |
                  cargo build --release

            - name: Upload exe artifact
              uses: actions/upload-artifact@v4
              with:
                  name: transposer2025-windows-exe
                  path: target\release\transposer2025.exe

    release:
        name: Create Release Draft and attach exe
        needs: build-win
        runs-on: ubuntu-latest
        steps:
            - name: Download exe artifact
              uses: actions/download-artifact@v4
              with:
                  name: transposer2025-windows-exe

            - name: Checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0

            - name: Determine version
              id: get_version
              run: |
                  # If a manual release_tag input was provided to workflow_dispatch, use that.
                  RELEASE_TAG="${{ github.event.inputs.release_tag }}"
                  if [ -n "$RELEASE_TAG" ]; then
                    echo "Using manual release_tag: $RELEASE_TAG"
                    echo "tag=$RELEASE_TAG" >> $GITHUB_OUTPUT
                    exit 0
                  fi

                  # Otherwise extract version from Cargo.toml
                  version=$(sed -n 's/^version = "\(.*\)"/\1/p' Cargo.toml | head -n1)
                  if [ -z "$version" ]; then
                    echo "version not found in Cargo.toml" >&2
                    exit 1
                  fi
                  echo "tag=v$version" >> $GITHUB_OUTPUT

            - name: Create tag if absent
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  TAG=${{ steps.get_version.outputs.tag }}
                  if git rev-parse "$TAG" >/dev/null 2>&1; then
                    echo "Tag $TAG already exists"
                  else
                    git config user.name "github-actions[bot]"
                    git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
                    git tag -a "$TAG" -m "Release $TAG"
                    git push origin "$TAG"
                  fi

            - name: Verify exe presence
              run: |
                  if [ -f "transposer2025.exe" ]; then
                    echo "Found transposer2025.exe in root"
                  else
                    echo "Expected exe not found" >&2
                    ls -la
                    exit 1
                  fi

            - name: Create draft release
              id: create_release
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: ${{ steps.get_version.outputs.tag }}
                  files: transposer2025.exe
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
